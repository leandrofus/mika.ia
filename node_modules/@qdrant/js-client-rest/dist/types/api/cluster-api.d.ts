import { Client } from '../api-client.js';
export declare function createClusterApi(client: Client): {
    /**
     * Get information about the current state and composition of the cluster
     */
    readonly clusterStatus: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: "ok" | undefined;
                        result?: ({} & {
                            status: "enabled";
                            peer_id: number;
                            peers: {
                                [key: string]: {
                                    uri: string;
                                } | undefined;
                            };
                            raft_info: {
                                term: number;
                                commit: number;
                                pending_operations: number;
                                leader?: number | null | undefined;
                                role?: Record<string, unknown> | "Follower" | "Candidate" | "Leader" | "PreCandidate" | null | undefined;
                                is_voter: boolean;
                            };
                            consensus_thread_status: ({
                                last_update?: undefined;
                            } & {
                                consensus_thread_status: "stopped_with_err";
                                err: string;
                            }) | ({
                                err?: undefined;
                            } & (({
                                last_update?: undefined;
                            } & {
                                consensus_thread_status: "stopped";
                            }) | ({} & {
                                consensus_thread_status: "working";
                                last_update: string;
                            })));
                            message_send_failures: {
                                [key: string]: {
                                    count: number;
                                    latest_error?: string | null | undefined;
                                } | undefined;
                            };
                        }) | ({
                            consensus_thread_status?: undefined;
                            peer_id?: undefined;
                            peers?: undefined;
                            raft_info?: undefined;
                            message_send_failures?: undefined;
                        } & {
                            status: "disabled";
                        }) | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Get cluster information for a collection
     */
    readonly collectionClusterInfo: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            path: {
                collection_name: string;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: "ok" | undefined;
                        result?: {
                            peer_id: number;
                            shard_count: number;
                            local_shards: {
                                shard_id: number;
                                points_count: number;
                                state: "Active" | "Dead" | "Partial" | "Initializing" | "Listener";
                            }[];
                            remote_shards: {
                                shard_id: number;
                                peer_id: number;
                                state: "Active" | "Dead" | "Partial" | "Initializing" | "Listener";
                            }[];
                            shard_transfers: {
                                shard_id: number;
                                from: number;
                                to: number;
                                sync: boolean;
                            }[];
                        } | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    readonly recoverCurrentPeer: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: "ok" | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    /**
     * Tries to remove peer from the cluster. Will return an error if peer has shards on it.
     */
    readonly removePeer: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query: {
                force?: boolean | undefined;
            };
            path: {
                peer_id: number;
            };
        };
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: "ok" | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
    readonly updateCollectionCluster: import("@qdrant/openapi-typescript-fetch").TypedFetch<{
        parameters: {
            query: {
                timeout?: number | undefined;
            };
            path: {
                collection_name: string;
            };
        };
        requestBody?: {
            content: {
                "application/json": {
                    move_shard: {
                        shard_id: number;
                        to_peer_id: number;
                        from_peer_id: number;
                    };
                } | {
                    replicate_shard: {
                        shard_id: number;
                        to_peer_id: number;
                        from_peer_id: number;
                    };
                } | {
                    abort_transfer: {
                        shard_id: number;
                        to_peer_id: number;
                        from_peer_id: number;
                    };
                } | {
                    drop_replica: {
                        shard_id: number;
                        peer_id: number;
                    };
                };
            };
        } | undefined;
        responses: {
            200: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: "ok" | undefined;
                        result?: boolean | undefined;
                    };
                };
            };
            default: {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
            "4XX": {
                content: {
                    "application/json": {
                        time?: number | undefined;
                        status?: {
                            error?: string | undefined;
                        } | undefined;
                        result?: Record<string, unknown> | null | undefined;
                    };
                };
            };
        };
    }>;
};
